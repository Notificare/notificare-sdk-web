import { NavigationBar } from "@/components/navigation-bar";
import { NotificareProvider } from "@/context/notificare";
import Script from "next/script";

import "./globals.css";

const GOOGLE_MAPS_API_KEY = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className="h-full bg-gray-100">
      <body className="h-full">
        <div className="min-h-full">
          <NotificareProvider>
            <NavigationBar />

            {/*<header className="bg-white shadow">*/}
            {/*  <div className="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">*/}
            {/*    <h1 className="text-3xl font-bold tracking-tight text-gray-900">*/}
            {/*      Dashboard*/}
            {/*    </h1>*/}
            {/*  </div>*/}
            {/*</header>*/}

            <main>
              <div className="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
                {children}
              </div>
            </main>
          </NotificareProvider>
        </div>

        <Script id="google-maps">
          {`
            (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=\`https://maps.$\{c}apis.com/maps/api/js?\`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
              key: "${GOOGLE_MAPS_API_KEY}",
              // Add other bootstrap parameters as needed, using camel case.
              // Use the 'v' parameter to indicate the version to load (alpha, beta, weekly, etc.)
            });
          `}
        </Script>
      </body>
    </html>
  );
}
